@model DataAccess.ViewModels.UserCardThemeSettingViewModel
@using DataAccess
@{
    var user = new DataAccess.Repository.UserRepository().GetUserById(Model.UserId, "BharatTouch/EditProfile/_defaultCardPreview.cshtml");

    bool isProfilePicExist = user.ProfileImage.NullToString() != "";

    var linkedIn = "";
    var Twitter = "";
    var Facebook = "";
    var Instagram = "";
    var Skype = "";
    var Youtube = "";
    var socialInfo = new DataAccess.Repository.SocialRepository().GetSocialInfo(user.UserId, "BharatTouch/EditProfile/_defaultCardPreview.cshtml");
    if (socialInfo.Count > 0)
    {
        if (socialInfo.FirstOrDefault(x => x.SocialMedia == "LinkedIn") != null)
        {
            linkedIn = socialInfo.FirstOrDefault(x => x.SocialMedia == "LinkedIn").Url.NullToString();
        }
        if (socialInfo.FirstOrDefault(x => x.SocialMedia == "Twitter") != null)
        {
            Twitter = socialInfo.FirstOrDefault(x => x.SocialMedia == "Twitter").Url.NullToString();
        }
        if (socialInfo.FirstOrDefault(x => x.SocialMedia == "Facebook") != null)
        {
            Facebook = socialInfo.FirstOrDefault(x => x.SocialMedia == "Facebook").Url.NullToString();
        }
        if (socialInfo.FirstOrDefault(x => x.SocialMedia == "Instagram") != null)
        {
            Instagram = socialInfo.FirstOrDefault(x => x.SocialMedia == "Instagram").Url.NullToString();
        }
        if (socialInfo.FirstOrDefault(x => x.SocialMedia == "Skype") != null)
        {
            Skype = socialInfo.FirstOrDefault(x => x.SocialMedia == "Skype").Url.NullToString();
        }
        if (socialInfo.FirstOrDefault(x => x.SocialMedia == "Youtube") != null)
        {
            Youtube = socialInfo.FirstOrDefault(x => x.SocialMedia == "Youtube").Url.NullToString();
        }
    }

    bool isBackgroundImgExist = false;
    if (Model.BackgroundImg.NullToString() != "")
    {
        isBackgroundImgExist = System.IO.File.Exists(Server.MapPath("~" + Model.BackgroundImg));
    }
    bool isCoverImageExist = false;
    try
    {
        if(user.CoverImage != null && user.CoverImage.NullToString() != "")
        {
            isCoverImageExist = (user.CoverImage.StartsWith("http") || user.CoverImage.StartsWith("www")) ? true : System.IO.File.Exists(Server.MapPath("~" + user.CoverImage));
        }
    }
    catch(Exception ex) { }

    var defaultBgImg = "https://images.unsplash.com/photo-1540228232483-1b64a7024923?ixlib=rb-1.2.1&auto=format&fit=crop&w=967&q=80";

    var backgroundImage = isBackgroundImgExist ? Model.BackgroundImg : defaultBgImg;
    var coverImage = isCoverImageExist ? user.CoverImage : defaultBgImg;

    var bestFitCoverImageStyleClass = user.BestFitCoverImage.NullToString() == "" ? "cover" : user.BestFitCoverImage.NullToString();

    DataAccess.ViewModels.UserPackageViewModel package = new DataAccess.ViewModels.UserPackageViewModel();
    package = new DataAccess.Repository.PackagesRepository().GetPackageByUserId(user.UserId, "BharatTouch/EditProfile/_defaultCardPreview.cshtml");


    @functions {
        string EnsureUrl(string url)
        {
            string modifiedUrl = url;
            if (url.NullToString() != "" && !url.StartsWith("http"))
            {
                modifiedUrl = "http://" + url;
            }
            return modifiedUrl;
        }
    }
}

<style>
    .cover-photo.stretch {
        background-size: 100% 100%;
    }

    .cover-photo.contain {
        background-size: contain;
        background-position: center;
    }

    .cover-photo.cover {
        background-size: cover;
        background-position: center;
    }

    .cover-photo.custom-offset-fit {
        background-size: 120%;
        background-position: -20px -10px;
    }

    .card-social-icon {
        color: #ffffff;
    }

        .card-social-icon:hover {
            color: #03bfbc;
        }

    .social-icons-list i {
        padding-left: 15px;
        font-size: 20px;
        margin-bottom: 20px;
        cursor: pointer;
        transition: .5s;
    }

    .profile-name {
        font-size: 25px;
        font-weight: bold;
        margin: 60px 0 0 -7px;
        text-align: center;
    }


    .card-profile-image {
        height: 100px;
        width: 100px;
        border-radius: 50%;
/*        margin: 93px 0 0 -175px;*/
        margin: 100px 0 0 -110px;
        border: 1px solid #1f1a32;
        padding: 7px;
        background: #292343;
        justify-self: center;
    }

    .ico {
        font-size: 20px;
        color: #149ddd;
/*        float: left;*/
        width: 35px;
        height: 35px;
        background: #dff3fc;
/*        display: flex;*/
        justify-content: center;
        align-items: center;
        border-radius: 50px;
        transition: all 0.3s ease-in-out;
        margin-right: 39px;
        margin-bottom: 10px;
        cursor: pointer;
    }

        .ico:hover {
            background: #149ddd !important;
            color: #fff !important;
        }
    .ico-mg {
        margin-right: 2px !important;
        margin-left: 8px !important;
    }

/*    .profile {
        height: 76%;
        width: 50%;
        border-radius: 50%;
        margin: 38% 0 0 -44%;
        border: 1px solid #1f1a32;
        padding: 7px;
        background: #292343;
    }*/
    
</style>

<section>
    <div class="py-3 h-100">
        <div class="justify-content-center align-items-center h-100">
            <div class="col-md-12">


                <div class="h-100" style="user-select: none; background: #231e39; color: #b3b8cd; border-radius: 5px; width: 100%; text-align: center; box-shadow: 0 10px 20px -10px rgba(0,0,0,.75);">
                    <div class="cover-photo @bestFitCoverImageStyleClass" style="background: url(@coverImage); height: 160px; width: 100%; border-radius: 5px 5px 0 0;">
                        <img id="PreProfilePic" src="@(isProfilePicExist ? user.ProfileImage.NullToString() + "?v=" + DateTime.Now.ToString("yyyyMMddHHmmssf") : "/FormAssets/img/blank-profile-picture.jpg")" class="card-profile-image">
                    </div>
                    <div class="profile-name">
                        <span id="PreFirstName">@user.FirstName</span> <span id="PreLastName">@user.LastName</span>
                    </div>
                    <div class="p-3">
                        <p class="about" style="display: @(user.Tagline.NullToString() == "" ? "none" : "inline");">
                            <h5 id="PreTagline" class="card-tagline">@user.Tagline</h5>
                        </p>
                        @*<p style="display: @(user.EmailId.NullToString() == "" ? "none" : "inline");">
                            <i class="fa-solid fa-envelope"></i> <span id="PreEmailId">@user.EmailId</span>
                        </p>*@
                        @*<br />*@
                        <!--<p style="display: @(user.Website.NullToString() == "" ? "none" : "inline");">-->
                            @*<i class="fa-solid fa-globe"></i>*@ 
                            <!--<a id="PreWebsite" target="_blank" href="@EnsureUrl(user.Website)">
                                <img src="~/FormAssets/img/Icons/website-avi.png" class="ico ico-mg" />
                            </a>
                        </p>-->
                    </div>
                    <div class="social-icons-list mt-3">
                        <a href="mailto:@user.EmailId" target="_blank" id="PreEmailId" class="card-social-icon" style="display: @(user.EmailId.NullToString() == "" ? "none" : "inline");">
                            <img src="~/FormAssets/img/Icons/mail-avi.png" class="ico ico-mg" />
                        </a>
                        <a id="PreWebsite" target="_blank" class="card-social-icon" href="@EnsureUrl(user.Website)" style="display: @(user.Website.NullToString() == "" ? "none" : "inline");">
                            <img src="~/FormAssets/img/Icons/website-avi.png" class="ico ico-mg" />
                        </a>
                        @if (package != null && package.AllowSocialMedia)
                        {
                            <a target="_blank" id="PreFacebookLink" class="card-social-icon" href="@EnsureUrl(Facebook)" style="display: @(Facebook.NullToString() == ""? "none" : "inline");">
                                <img src="~/FormAssets/img/Icons/facebook.png" class="ico ico-mg" />
                            </a>
                            <a target="_blank" id="PreInstagramLink" class="card-social-icon" href="@EnsureUrl(Instagram)" style="display: @(Instagram.NullToString() == ""? "none" : "inline");">
                                <img src="~/FormAssets/img/Icons/instagram.png" class="ico ico-mg" />
                            </a>
                            <a target="_blank" id="PreYoutubeLink" class="card-social-icon" href="@Youtube" style="display: @(Youtube.NullToString() == ""? "none" : "inline");">
                                <img src="~/FormAssets/img/Icons/youtube.png" class="ico ico-mg" />
                            </a>
                            <a target="_blank" id="PreTwitterLink" class="card-social-icon" href="@EnsureUrl(Twitter)" style="display: @(Twitter.NullToString() == ""? "none" : "inline");">
                                <img src="~/FormAssets/img/Icons/twitter.png" class="ico ico-mg" />
                            </a>
                            <a target="_blank" id="PreLinkedInLink" class="card-social-icon" href="@EnsureUrl(linkedIn)" style="display: @(linkedIn.NullToString() == ""? "none" : "inline");">
                                <img src="~/FormAssets/img/Icons/linkedin.png" class="ico ico-mg" />
                            </a>

                            <a target="_blank" id="PreSkypeLink" class="card-social-icon" href="@EnsureUrl(Skype)" style="display: @(Skype.NullToString() == ""? "none" : "inline");">
                                <img src="~/FormAssets/img/Icons/skype.png" class="ico ico-mg" />
                            </a>
                        }
                    </div>
                </div>


            </div>

            <div id="currentPackageContainer">
                @Html.Partial("_userCurrentPackage", package.PackageId)
            </div>
        </div>
    </div>
</section>